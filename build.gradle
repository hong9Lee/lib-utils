plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id "io.freefair.lombok" version "8.1.0"
    id 'jacoco'
}

group = 'co.hong.libs'
version = '0.0.1'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def jacksonVersion = '2.15.1'
def junitVersion = '5.9.2'
dependencies {

    // Jackson Dependencies
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    // Lombok features
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test Features
    testImplementation 'ch.qos.logback:logback-classic:1.4.7'
    testImplementation 'org.springframework:spring-test:6.0.6'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

jar {
    enabled = true
    archiveClassifier.set("")

    manifest {
        attributes('Impementation-Title': project.name, 'Implementation-Version': project.version)
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/hong9Lee/lib-utils")
        }
    }

	publications {
		maven(MavenPublication) {
			groupId = 'co.hong.libs'
			artifactId = 'lib-utils'
			version = project.version
			artifact sourceJar
			from components.java

			pom.withXml {
				def repositories = asNode().appendNode('repositories')

				def repo_jitpack = repositories.appendNode('repository')
				repo_jitpack.appendNode('id', 'jitpack.io')
				repo_jitpack.appendNode('url', 'https://jitpack.io')

				def repo_jcenter = repositories.appendNode('repository')
				repo_jcenter.appendNode('snapshots').appendNode('enabled', 'false')
				repo_jcenter.appendNode('id', 'jcenter')
				repo_jcenter.appendNode('url', 'https://jcenter.bintray.com/')

				def repo_mavenCentral = repositories.appendNode('repository')
				repo_mavenCentral.appendNode('snapshots').appendNode('enabled', 'false')
				repo_mavenCentral.appendNode('id', 'mavenCentral')
				repo_mavenCentral.appendNode('url', 'https://repo1.maven.org/maven2')
			}
		}
	}
}

tasks.named('test') {
    useJUnitPlatform()
}
